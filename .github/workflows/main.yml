name: Publish Docker image (amd64)

on:
  push:
    branches:
      - sunnchao_main
  workflow_dispatch:
    inputs:
      name:
        description: 'reason'
        required: false

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Save version info
        run: |
          git rev-parse HEAD > VERSION
      - uses: actions/setup-node@v3
        with:
          node-version: 22.4.1
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            web/node_modules
            ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build Frontend
        env:
          CI: ""
        run: |
          export VERSION=$(cat VERSION)
          cd web
          yarn install
          REACT_APP_VERSION=$VERSION yarn run build
          cd ..
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
      - name: Build Backend (amd64)
        run: |
          go mod download
          go build -ldflags "-s -w -X 'one-api/common/config.Version=$(cat VERSION)' -extldflags '-static'" -o one-api-amd64
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            sunchaowang/one-api-m

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          build-args: |
            COMMIT_SHA=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          push: true
          tags: sunchaowang/one-api-m:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile-action
